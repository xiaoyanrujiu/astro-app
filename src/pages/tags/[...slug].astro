---
import type { Page, Tag } from '@/types';
import PageLayout from '@/layouts/PageLayout.astro';
import { compareDesc } from 'date-fns';
import PostCard from '@/components/PostCard';
import getTags from '@/utils/getTags';
import getPosts from '@/utils/getPosts';
import type { GetStaticPaths } from 'astro';

export interface Props {
  tag: Tag;
}

export const getStaticPaths = (async () => {
  const tags = await getTags();
  return tags.map(tag => ({
    params: {
      slug: tag.slug,
    },
    props: {
      tag: tag,
    },
  }))
}) satisfies GetStaticPaths;

const { slug } = Astro.params;
const { tag: tagProp } = Astro.props;
const tag = tagProp ?? (await getTags()).find(tag => tag.slug === slug);

const allPosts = 
  (await getPosts())
  .filter(post => post.tags.some(item => item.label === tag.label))
  .filter(post => !post.draft)
  .sort((a, b) => compareDesc(a.date, b.date));

const page: Page = {
  type: 'posts',
  title: `标签: ${tag.label}`,
  posts: allPosts,
}
---

<PageLayout page={page}>
  {
    allPosts.map((post, index) => {
      return <PostCard
        class='mb-4 md:mb-6'
        title={post.title} 
        excerpt={post.excerpt}
        image={post.image}
        date={post.date}
        url={post.url}
        wordCount={post.wordCount}
        readingTime={post.readingTime && Math.ceil(post.readingTime)}
        tags={post.tags}
        category={post.category}
        variant={post.cardVariant}
        imagePosition={index%2==0?'left':'right'}
      ></PostCard>
    })
  }
</PageLayout>
