---
import type { Category, Page } from '@/types';
import PageLayout from '@/layouts/PageLayout.astro';
import { compareDesc } from 'date-fns';
import PostCard from '@/components/PostCard';
import getCategories from '@/utils/getCategories';
import getPosts from '@/utils/getPosts';
import type { GetStaticPaths } from 'astro';

export interface Props {
  category: Category;
}

export const getStaticPaths = (async () => {
  const categories = await getCategories();
  return categories.map(category => ({
    params: {
      slug: category.slug,
    },
    props: {
      category: category,
    },
  }))
}) satisfies GetStaticPaths;

const { slug } = Astro.params;
const { category: categoryProp } = Astro.props;
const category = categoryProp ?? (await getCategories()).find(category => category.slug === slug);
const allPosts = 
  (await getPosts())
  .filter(post => post.category.label === category.label)
  .filter(post => !post.draft)
  .sort((a, b) => compareDesc(a.date, b.date));


  const page: Page = {
  type: 'posts',
  title: `分类: ${category.label}`,
  posts: allPosts,
}
---

<PageLayout page={page}>
  {
    allPosts.map((post, index) => {
      return <PostCard
        class='mb-4 md:mb-6'
        title={post.title} 
        excerpt={post.excerpt}
        image={post.image}
        date={post.date}
        url={post.url}
        wordCount={post.wordCount}
        readingTime={post.readingTime && Math.ceil(post.readingTime)}
        tags={post.tags}
        category={post.category}
        variant={post.cardVariant}
        imagePosition={index%2==0?'left':'right'}
      ></PostCard>
    })
  }
</PageLayout>
